import React, { useState, useEffect } from "react";
import axios from "axios";
import { motion } from "framer-motion"; // –ê–Ω–∏–º–∞—Ü–∏–∏
import { API_URL } from "../config"; // –ò–º–ø–æ—Ä—Ç API_URL
import "../styles.css"; // –ü–æ–¥–∫–ª—é—á–∞–µ–º —Å—Ç–∏–ª–∏
import "../index.css"; // –ü–æ–¥–∫–ª—é—á–∞–µ–º Tailwind

function WalletPage() {
    const [walletData, setWalletData] = useState(null);
    const [address, setAddress] = useState(localStorage.getItem("wallet") || "");
    const [darkMode, setDarkMode] = useState(() => localStorage.getItem("theme") === "dark");

    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–µ–º—É –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
    useEffect(() => {
        if (darkMode) {
            document.documentElement.classList.add("dark"); // –ú–µ–Ω—è–µ–º html, –∞ –Ω–µ body
            localStorage.setItem("theme", "dark");
        } else {
            document.documentElement.classList.remove("dark");
            localStorage.setItem("theme", "light");
        }
    }, [darkMode]);

    // –ó–∞–ø—Ä–æ—Å –Ω–∞ –±—ç–∫–µ–Ω–¥
    useEffect(() => {
        if (address) {
            console.log(`üöÄ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –∫ –±—ç–∫–µ–Ω–¥—É: ${API_URL}?address=${address}`);

            axios.get(`${API_URL}?address=${address}`)
                .then((response) => {
                    console.log("‚úÖ –û—Ç–≤–µ—Ç –æ—Ç –±—ç–∫–µ–Ω–¥–∞:", response.data);

                    if (!response.data || Object.keys(response.data).length === 0) {
                        console.error("‚ö†Ô∏è –ë—ç–∫–µ–Ω–¥ –≤–µ—Ä–Ω—É–ª –ø—É—Å—Ç–æ–π –æ–±—ä–µ–∫—Ç!", response);
                        return;
                    }

                    setWalletData(response.data);
                    localStorage.setItem("wallet", address);
                })
                .catch((error) => {
                    console.error("‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞:", error);
                });
        }
    }, [address]);

    return (
        <div className={`min-h-screen flex flex-col items-center justify-center px-4 py-8 transition-all duration-300 ${darkMode ? "bg-gray-900 text-white" : "bg-gray-100 text-black"}`}>
            {/* –ü–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—å —Ç–µ–º—ã */}
            <button
                className="absolute top-4 right-4 p-2 bg-gray-800 text-white dark:bg-gray-200 dark:text-black rounded-full transition duration-300"
                onClick={() => setDarkMode(!darkMode)}
            >
                {darkMode ? "üåû –°–≤–µ—Ç–ª–∞—è" : "üåô –¢—ë–º–Ω–∞—è"}
            </button>

            {/* –ü–æ–ª–µ –≤–≤–æ–¥–∞ –∫–æ—à–µ–ª—å–∫–∞ */}
            <motion.div
                initial={{ opacity: 0, y: -10 }}
                animate={{ opacity: 1, y: 0 }}
                transition={{ duration: 0.5 }}
                className="w-full max-w-xl bg-white dark:bg-gray-800 rounded-lg shadow-lg p-6"
            >
                <h2 className="text-xl font-bold text-center mb-4">üîç –í–≤–µ–¥–∏—Ç–µ –∞–¥—Ä–µ—Å –∫–æ—à–µ–ª—å–∫–∞</h2>
                <input
                    type="text"
                    value={address}
                    onChange={(e) => setAddress(e.target.value)}
                    className="w-full p-3 text-lg border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 dark:bg-gray-700 dark:text-white"
                    placeholder="0x123... –ø–æ–ª–Ω—ã–π –∞–¥—Ä–µ—Å"
                />
            </motion.div>

            {/* –î–∞–Ω–Ω—ã–µ –∫–æ—à–µ–ª—å–∫–∞ */}
            {walletData ? (
                <motion.div
                    initial={{ opacity: 0, scale: 0.9 }}
                    animate={{ opacity: 1, scale: 1 }}
                    transition={{ duration: 0.5 }}
                    className="mt-6 w-full max-w-xl bg-white dark:bg-gray-800 rounded-lg shadow-lg p-6"
                >
                    <h3 className="text-xl font-bold text-center">üí∞ –ë–∞–ª–∞–Ω—Å: {walletData.balance}</h3>
                    <ul className="mt-4 divide-y divide-gray-300 dark:divide-gray-600">
                        {walletData.transactionHistory && walletData.transactionHistory.length > 0 ? (
                            walletData.transactionHistory.map((tx, index) => (
                                <li key={index} className="py-4">
                                    <p className="font-semibold">üîó –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è {index + 1}</p>
                                    <p>üì§ –û—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å: {tx.from}</p>
                                    <p>üì• –ü–æ–ª—É—á–∞—Ç–µ–ª—å: {tx.to}</p>
                                    <p>üí∞ –°—É–º–º–∞: {tx.value} {tx.token}</p>
                                    <p>üíµ USD: {tx.usd}</p>
                                </li>
                            ))
                        ) : (
                            <p className="text-center">üîÑ –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç</p>
                        )}
                    </ul>
                </motion.div>
            ) : (
                <p className="mt-6">‚åõ –ó–∞–≥—Ä—É–∑–∫–∞...</p>
            )}
        </div>
    );
}

export default WalletPage;
